{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5117/api/recipe';\nexport const getAllRecipes = async () => {\n  const response = await axios.get(`${API_BASE_URL}`);\n  return response.data;\n};\nexport const getRecipe = async id => {\n  const response = await axios.get(`${API_BASE_URL}/${id}`);\n  return response.data;\n};\nexport const createRecipe = async recipeData => {\n  try {\n    console.log('Payload sent to backend:', recipeData); // Add this line\n    const token = localStorage.getItem('token');\n    const response = await axios.post(API_BASE_URL, recipeData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error creating recipe:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw error;\n  }\n};\nexport const updateRecipe = async (id, recipeData) => {\n  const token = localStorage.getItem(\"token\");\n  const response = await axios.put(`${API_BASE_URL}/${id}`, recipeData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nexport const deleteRecipe = async id => {\n  const token = localStorage.getItem(\"token\");\n  await axios.delete(`${API_BASE_URL}/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const searchRecipes = async query => {\n  const response = await axios.get(`${API_BASE_URL}/search?q=${query}`);\n  return response.data;\n};\nexport const getSavedRecipes = async () => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get(`${API_BASE_URL}/user`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAllRecipes","response","get","data","getRecipe","id","createRecipe","recipeData","console","log","token","localStorage","getItem","post","headers","Authorization","error","_error$response","message","updateRecipe","put","deleteRecipe","delete","searchRecipes","query","getSavedRecipes"],"sources":["/Users/Eric/Desktop/team-render-rangers-frontend/src/services/recipeService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Recipe } from '../models/recipe';\n\nconst API_BASE_URL = 'http://localhost:5117/api/recipe';\n\nexport const getAllRecipes = async (): Promise<Recipe[]> => {\n  const response = await axios.get(`${API_BASE_URL}`);\n  return response.data;\n};\n\nexport const getRecipe = async (id: number): Promise<Recipe> => {\n  const response = await axios.get<Recipe>(`${API_BASE_URL}/${id}`);\n  return response.data;\n};\n\nexport const createRecipe = async (recipeData: any): Promise<any> => {\n  try {\n    console.log('Payload sent to backend:', recipeData); // Add this line\n    const token = localStorage.getItem('token');\n    const response = await axios.post(API_BASE_URL, recipeData, {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error creating recipe:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n\nexport const updateRecipe = async (id: number, recipeData: Partial<Recipe>) => {\n  const token = localStorage.getItem(\"token\"); \n  const response = await axios.put(\n    `${API_BASE_URL}/${id}`,\n    recipeData,\n    {\n      headers: {\n        Authorization: `Bearer ${token}`, \n      },\n    }\n  );\n  return response.data;\n};\n\nexport const deleteRecipe = async (id: number): Promise<void> => {\n  const token = localStorage.getItem(\"token\");\n  await axios.delete(`${API_BASE_URL}/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const searchRecipes = async (query: string): Promise<Recipe[]> => {\n  const response = await axios.get(`${API_BASE_URL}/search?q=${query}`);\n  return response.data;\n};\n\nexport const getSavedRecipes = async (): Promise<Recipe[]> => {\n  const token = localStorage.getItem('token');\n  const response = await axios.get(`${API_BASE_URL}/user`, { \n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  return response.data;\n};\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,kCAAkC;AAEvD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAA+B;EAC1D,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,EAAE,CAAC;EACnD,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,EAAU,IAAsB;EAC9D,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAS,GAAGH,YAAY,IAAIM,EAAE,EAAE,CAAC;EACjE,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAOC,UAAe,IAAmB;EACnE,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,UAAU,CAAC,CAAC,CAAC;IACrD,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACe,IAAI,CAACd,YAAY,EAAEQ,UAAU,EAAE;MAC1DO,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUL,KAAK;MAAG;IAC9C,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOa,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdT,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACf,QAAQ,cAAAgB,eAAA,uBAAdA,eAAA,CAAgBd,IAAI,KAAIa,KAAK,CAACE,OAAO,CAAC;IAC9E,MAAMF,KAAK;EACb;AACF,CAAC;AAGD,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOd,EAAU,EAAEE,UAA2B,KAAK;EAC7E,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACsB,GAAG,CAC9B,GAAGrB,YAAY,IAAIM,EAAE,EAAE,EACvBE,UAAU,EACV;IACEO,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUL,KAAK;IAChC;EACF,CACF,CAAC;EACD,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMkB,YAAY,GAAG,MAAOhB,EAAU,IAAoB;EAC/D,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMd,KAAK,CAACwB,MAAM,CAAC,GAAGvB,YAAY,IAAIM,EAAE,EAAE,EAAE;IAC1CS,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUL,KAAK;IAChC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMa,aAAa,GAAG,MAAOC,KAAa,IAAwB;EACvE,MAAMvB,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,aAAayB,KAAK,EAAE,CAAC;EACrE,OAAOvB,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMsB,eAAe,GAAG,MAAAA,CAAA,KAA+B;EAC5D,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,OAAO,EAAE;IACvDe,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUL,KAAK;IAChC;EACF,CAAC,CAAC;EACF,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}