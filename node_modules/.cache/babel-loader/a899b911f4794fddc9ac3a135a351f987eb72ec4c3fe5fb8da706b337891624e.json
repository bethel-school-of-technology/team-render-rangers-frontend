{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5117/api'; // base URL for your API\n\n// user sign in\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/Auth/login?email=${credentials.email}&password=${credentials.password}`);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error('Error logging in:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {\n      message: 'Log in failed'\n    };\n  }\n};\n\n// user sign up\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/Auth/register`, userData);\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error('Error registering:', ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || {\n      message: 'Registration failed'\n    };\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","loginUser","credentials","response","get","email","password","data","error","_error$response","_error$response2","console","message","registerUser","userData","post","_error$response3","_error$response4"],"sources":["/Users/Eric/Desktop/team-render-rangers-frontend/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5117/api'; // base URL for your API\n\n// user sign in\nexport const loginUser = async (credentials: { email: string; password: string }) => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/Auth/login?email=${credentials.email}&password=${credentials.password}`);\n    return response.data; \n  } catch (error: any) {\n    console.error('Error logging in:', error.response?.data || error.message);\n    throw error.response?.data || { message: 'Log in failed' };\n  }\n};\n\n// user sign up\nexport const registerUser = async (userData: { name: string; email: string; password: string }) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/Auth/register`, userData);\n    return response.data; \n  } catch (error: any) {\n    console.error('Error registering:', error.response?.data || error.message);\n    throw error.response?.data || { message: 'Registration failed' };\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B,CAAC,CAAC;;AAElD;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAgD,IAAK;EACnF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGJ,YAAY,qBAAqBE,WAAW,CAACG,KAAK,aAAaH,WAAW,CAACI,QAAQ,EAAE,CAAC;IAC1H,OAAOH,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAU,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IACnBC,OAAO,CAACH,KAAK,CAAC,mBAAmB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;IACzE,MAAM,EAAAF,gBAAA,GAAAF,KAAK,CAACL,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBH,IAAI,KAAI;MAAEK,OAAO,EAAE;IAAgB,CAAC;EAC5D;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAA2D,IAAK;EACjG,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,IAAI,CAAC,GAAGf,YAAY,gBAAgB,EAAEc,QAAQ,CAAC;IAC5E,OAAOX,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAU,EAAE;IAAA,IAAAQ,gBAAA,EAAAC,gBAAA;IACnBN,OAAO,CAACH,KAAK,CAAC,oBAAoB,EAAE,EAAAQ,gBAAA,GAAAR,KAAK,CAACL,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;IAC1E,MAAM,EAAAK,gBAAA,GAAAT,KAAK,CAACL,QAAQ,cAAAc,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAI;MAAEK,OAAO,EAAE;IAAsB,CAAC;EAClE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}