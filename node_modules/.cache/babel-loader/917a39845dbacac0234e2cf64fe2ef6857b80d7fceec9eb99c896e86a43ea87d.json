{"ast":null,"code":"var _jsxFileName = \"/Users/Eric/Desktop/team-render-rangers-frontend/src/pages/Feed.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NavBar from '../components/NavBar.tsx';\nimport { getAllRecipes } from '../services/recipeService.ts';\n// Keep this import\nimport './Feed.css';\nimport { useRecipeContext } from '../context/RecipeContext.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const {\n    recipes,\n    setRecipes\n  } = useRecipeContext();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        setIsLoading(true);\n        const fetchedRecipes = await getAllRecipes(); // Using the Recipe type here\n        setRecipes(fetchedRecipes);\n        setIsLoading(false);\n      } catch (err) {\n        console.error('Error fetching recipes:', err);\n        setError('Failed to load recipes. Please try again later.');\n        setIsLoading(false);\n      }\n    };\n    fetchRecipes();\n  }, [setRecipes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"feed-header\",\n      children: \"Public Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading recipes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"All recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), recipes.length > 1 ? recipes.map(recipe =>\n      /*#__PURE__*/\n      // Explicitly typing the recipe variable\n      _jsxDEV(\"div\", {\n        className: \"recipe-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.recipeImgUrl,\n          alt: recipe.recipeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipe.recipeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.recipeCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, recipe.recipeId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No other user posts to display yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"Qc5xX0CB2Zcl1Lg7oVezOCfCs+g=\", false, function () {\n  return [useRecipeContext];\n});\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","getAllRecipes","useRecipeContext","jsxDEV","_jsxDEV","Feed","_s","recipes","setRecipes","isLoading","setIsLoading","error","setError","fetchRecipes","fetchedRecipes","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","recipe","src","recipeImgUrl","alt","recipeName","recipeCategory","recipeId","_c","$RefreshReg$"],"sources":["/Users/Eric/Desktop/team-render-rangers-frontend/src/pages/Feed.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NavBar from '../components/NavBar.tsx';\nimport { getAllRecipes } from '../services/recipeService.ts';\nimport { Recipe } from '../models/recipe'; // Keep this import\nimport './Feed.css';\nimport { useRecipeContext } from '../context/RecipeContext.tsx';\n\nconst Feed = () => {\n  const { recipes, setRecipes } = useRecipeContext();\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchRecipes = async (): Promise<void> => {\n      try {\n        setIsLoading(true);\n        const fetchedRecipes: Recipe[] = await getAllRecipes(); // Using the Recipe type here\n        setRecipes(fetchedRecipes);\n        setIsLoading(false);\n      } catch (err) {\n        console.error('Error fetching recipes:', err);\n        setError('Failed to load recipes. Please try again later.');\n        setIsLoading(false);\n      }\n    };\n\n    fetchRecipes();\n  }, [setRecipes]);\n\n  return (\n    <div className=\"feed-container\">\n      <NavBar />\n      <h1 className=\"feed-header\">Public Feed</h1>\n\n      {isLoading && <p>Loading recipes...</p>}\n      {error && <p className=\"error-message\">{error}</p>}\n\n      {!isLoading && !error && (\n        <div className=\"post-section\">\n          <h2>All recipes</h2>\n          {recipes.length > 1 ? (\n            recipes.map((recipe: Recipe) => ( // Explicitly typing the recipe variable\n              <div key={recipe.recipeId} className=\"recipe-card\">\n                <img src={recipe.recipeImgUrl} alt={recipe.recipeName} />\n                <h3>{recipe.recipeName}</h3>\n                <p>{recipe.recipeCategory}</p>\n              </div>\n            ))\n          ) : (\n            <p>No other user posts to display yet!</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Feed;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}